annotation.processing.enabled=true
annotation.processing.enabled.in.editor=true
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
build.classes.dir=${build.web.dir}/WEB-INF/classes
build.classes.excludes=**/*.java,**/*.form
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
build.web.dir=${build.dir}/web
build.web.excludes=${build.classes.excludes}
client.urlPart=
compile.jsps=false
conf.dir=${source.root}/conf
debug.classpath=${build.classes.dir}:${javac.classpath}
debug.test.classpath=\
    ${run.test.classpath}
display.browser=true
# Files to be excluded from distribution war
dist.archive.excludes=
dist.dir=dist
dist.ear.war=${dist.dir}/${war.ear.name}
dist.javadoc.dir=${dist.dir}/javadoc
dist.war=${dist.dir}/${war.name}
endorsed.classpath=\
    ${libs.javaee-endorsed-api-6.0.classpath}
excludes=
file.reference.antlr-runtime-4.5.3.jar=..\\Desktop\\DL\\music\\antlr-runtime-4.5.3.jar
file.reference.commons-fileupload-1.3.1.jar=C:\\Users\\Atik\\Desktop\\DL\\commons-fileupload-1.3.1.jar
file.reference.commons-io-2.5.jar=C:\\Users\\Atik\\Desktop\\DL\\commons-io-2.5\\commons-io-2.5.jar
file.reference.commons-logging-1.2.jar=C:\\Users\\Atik\\Desktop\\DL\\music\\Jar\\commons-logging-1.2.jar
includes=**
j2ee.compile.on.save=true
j2ee.copy.static.files.on.save=true
j2ee.deploy.on.save=true
j2ee.platform=1.6-web
j2ee.platform.classpath=${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.4.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat7-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar
j2ee.server.type=Tomcat
jar.compress=false
javac.classpath=\
    ${libs.MySQLDriver.classpath}:\
    ${file.reference.commons-fileupload-1.3.1.jar}:\
    ${file.reference.commons-io-2.5.jar}:\
    ${file.reference.commons-logging-1.2.jar}:\
    ${antlr.runtime.jar}:\
    ${file.reference.antlr-runtime-4.5.3.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.debug=true
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.7
javac.target=1.7
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.preview=true
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
lib.dir=${web.docbase.dir}/WEB-INF/lib
persistence.xml.dir=${conf.dir}
platform.active=default_platform
resource.dir=setup
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
# Space-separated list of JVM arguments used when running a class with a main method or a unit test
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value):
runmain.jvmargs=
source.encoding=UTF-8
source.root=src
src.dir=${source.root}/java
test.src.dir=test
war.content.additional=
war.ear.name=${war.name}
war.name=BEII1.war
web.docbase.dir=web
webinf.dir=web/WEB-INF

# ***********************
# * ANTLR V4 properties *
# ***********************
# You may set a project relative path or an abolute path to antlr4 ant task jar
# Normally, you should not change this value that points to your project antlr4
# ant task library
antlr.ant.task.jar=nbproject/antext/ANTLRAntTask.jar
antlr.ant.task.antlr.runtime.jar=${libs.ANTLR_4.5.3_runtime.classpath}


# comma-separated or whitespace-separated list of excluded grammar files
# (from the directory antlr.generator.src.dir so here only file names relative
#  to that directory)
antlr.generator.src.excluded=

# Where your lexer / parser code will be located
antlr.generator.dest.dir=${build.generated.sources.dir}/antlr

# This property defines the ANTLR library that will be used for generating
# Java code from your grammars.
# You can set this property with :
# - NetBeans library repository: ${libs.ANTLR_4.5.3_complete.classpath} or any
#   other version you have installed in your NETBeans library repository,
# - An ANTLR complete library of your choice defined by an absolute path  
#   pointing typically outside project directory,
# - the antlr 4.5.3 complete library deployed in your project library repository: 
#   lib/antlr-4.5.3-complete.jar (recommended because it enables your project to
#   continue to work even if you uninstall NetBeans),
# - empty property that will lead to use the library called project library.
# Whatever choice, you have made, if no library is found, the antlr4 task will fail.
antlr.generator.jar=${libs.ANTLR_4.5.3_complete.classpath}

# required for running your generated parser
antlr.runtime.jar=${libs.ANTLR_4.5.3_runtime.classpath}

# defines if ANTLR will generate a listener or not (default value=true)
antlr.generator.option.code.listener=false

# defines if ANTLR will generate a listener or not (default value=false)
antlr.generator.option.code.visitor=false

# defines the package of generated classes
# If you use this option (or if you put a Java package statement in 
# the grammar header) do not forget to place grammars in the 
# corresponding subdirectories of ${antlr.generator.dest.dir} as if they 
# where a Java source. You do not have to modiify antlr.generator.dest.dir.
antlr.generator.option.code.package=

# defines if ANTLR will generate DOT graph files that represent the internal
# augmented transition network (ATN) data structures that ANTLR uses to represent
# grammars (default value=false)
antlr.generator.option.atn=false
